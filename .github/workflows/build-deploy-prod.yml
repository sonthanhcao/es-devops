name: Build and Deploy Prod

on:
  push:
    tags:
      - v**
  workflow_dispatch:

env:
  SERVICE_NAME: ${{ github.event.repository.name }}
  ENVIROMENT: production
  HOSTNAME: es-devops.example.com
  IMAGE_TAG: latest # Overwrite later
  MONGO_URI: ${{ secrets.MONGO_URI }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Print and Set variables
        shell: bash
        run: |
          set -x
          # Variables
          echo $SERVICE_NAME
          echo "IMAGE_TAG=$(echo ${{ github.ref_name }} | sed 's/\//-/g')" >> $GITHUB_ENV
      - name: Set up Docker Buildx #Setup Buildx for caching
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-to: type=gha,mode=max, scope=${{ github.workflow }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG }}
            ghcr.io/${{ github.repository_owner }}/${{ env.SERVICE_NAME }}:latest
          cache-from: type=gha, scope=${{ github.workflow }}

      - name: Log out from GitHub Docker registry
        run: docker logout ghcr.io
  deploy:
    needs: build
    runs-on: shared-github-runner
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Print and Set variables
      shell: bash
      run: |
        set -x
        ls -al
        # Variables
        echo $SERVICE_NAME
        echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
        echo "NAMESPACE=$ENVIROMENT" >> $GITHUB_ENV
        echo "DOCKER_REPO=ghcr.io/${{ github.repository_owner }}" >> $GITHUB_ENV
        echo "GITHUB_USER=${{ github.actor }}" >> $GITHUB_ENV
        echo "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
        echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Deploy to Kubernetes Prod
      shell: bash
      run: |
        bash deploy.sh