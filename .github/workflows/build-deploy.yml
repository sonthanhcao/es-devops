name: Build and Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:    
      - 'main'
  workflow_dispatch:

env:
  SERVICE_NAME: ${{ github.event.repository.name }}
  ENVIROMENT: development
  HOSTNAME: es-devops-dev.example.com
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Print and Set variables
        shell: bash
        run: |
          set -x
          # Variables
          echo $SERVICE_NAME

      - name: Set up Docker Buildx #Setup Buildx for caching
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-to: type=gha,mode=max, scope=${{ github.workflow }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          cache-from: type=gha, scope=${{ github.workflow }}

      - name: Log out from GitHub Docker registry
        run: docker logout ghcr.io
  deploy:
    needs: build
    runs-on: shared-github-runner
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Print and Set variables
      shell: bash
      run: |
        set -x
        ls -al
        # Variables
        echo $SERVICE_NAME
        echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
        echo "NAMESPACE=$ENVIROMENT" >> $GITHUB_ENV
        echo "DOCKER_REPO=ghcr.io/${{ github.repository_owner }}" >> $GITHUB_ENV
        echo "GITHUB_USER=${{ github.actor }}" >> $GITHUB_ENV
        echo "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Deploy to Kubernetes
      shell: bash
      run: |
        bash deploy.sh